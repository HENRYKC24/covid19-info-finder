{"version":3,"sources":["redux/initialState.js","redux/covid19/covid19.js","redux/covid19/flags.js","redux/configureStore.js","no_flag.png","components/CountryCard.js","globe.gif","pages/HomePage.js","components/TableRow.js","pages/CountryPage.js","pages/RegionPage.js","pages/SubRegionPage.js","pages/PageNotFound.js","components/Footer.js","components/Navbar.js","components/Header.js","components/App.js","index.js"],"names":["initialState","covid19Data","FETCH_DATA","FILTER_STATE","fetchData","payload","type","getCovidInfoFromServer","dateValue","dispatch","a","now","Date","dateObject","year","getFullYear","month","getMonth","date","getDate","toString","length","defaultDate","url","fetch","tempResult","json","finalResult","countriesDataArray","Object","values","dates","countries","covid19Reducer","state","action","FETCH_FLAGS","covid19FlagsReducer","rootReducer","combineReducers","nationalFlags","store","createStore","applyMiddleware","logger","thunk","CountryCard","className","id","item","useSelector","filter","flags","flagURL","Array","isArray","country","left","name","toLowerCase","split","join","right","slice","substr","indexOf","to","pathname","data","flag","Flag","exact","src","alt","today_confirmed","toLocaleString","HomePage","useDispatch","useState","internalState","setInternalState","inputValue","setInputValue","setDateValue","worldWideTotal","reduce","init","current","isEven","isOdd","useEffect","toDateString","Globe","value","min","max","toLocaleDateString","reverse","onChange","e","target","passed","minDate","getTime","passedDate","todaysDate","placeholder","filteredState","includes","filterByCountryName","map","index","Math","random","uuidv4","source","TableRow","props","param","CountryPage","idMain","dateMain","flagMain","location","useLocation","localStorage","setItem","JSON","stringify","idState","parse","getItem","regions","rogions","today_new_confirmed","today_deaths","today_new_deaths","today_open_cases","today_recovered","today_new_recovered","sort","b","RegionPage","subRegions","sub_regions","SubRegionPage","PageNotFound","Footer","Navbar","history","useHistory","onClick","goBack","goForward","Header","App","countryNameAndFlagURl","countryInfo","path","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.17b184d2.chunk.js","sourcesContent":["const initialState = {\n  covid19Data: [],\n};\n\nexport default initialState;\n","import initialState from '../initialState';\n\n// Constants\nconst FETCH_DATA = 'covid19_info_finder/covid19/FETCH_DATA';\nconst FILTER_STATE = 'covid19_info_finder/covid19/FILTER_STATE';\n\n// Action Creators\nexport const fetchData = (payload) => ({\n  type: FETCH_DATA,\n  payload,\n});\n\nexport const filterState = (payload) => ({\n  type: FILTER_STATE,\n  payload,\n});\n\n// Reducers\nconst covid19Reducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case FETCH_DATA:\n      return payload;\n\n    case FILTER_STATE:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport const getCovidInfoFromServer = (dateValue) => async (dispatch) => {\n  try {\n    const now = new Date();\n    const dateObject = {\n      year: now.getFullYear(),\n      month: now.getMonth() + 1,\n      date: now.getDate(),\n    };\n\n    const { year } = dateObject;\n    const month = dateObject.month.toString().length === 1 ? `0${dateObject.month}` : dateObject.month;\n    const date = dateObject.date.toString().length === 1 ? `0${dateObject.date}` : dateObject.date;\n    const defaultDate = `${year}-${month}-${date}`;\n    const url = `https://api.covid19tracking.narrativa.com/api/${dateValue || defaultDate}`;\n    const tempResult = await fetch(url);\n    const finalResult = await tempResult.json();\n    const countriesDataArray = Object.values(finalResult.dates[dateValue || defaultDate].countries);\n    dispatch(fetchData(countriesDataArray));\n  } catch (e) {\n    const now = new Date();\n    const dateObject = {\n      year: now.getFullYear(),\n      month: now.getMonth() + 1,\n      date: now.getDate() - 1,\n    };\n\n    const { year } = dateObject;\n    const month = dateObject.month.toString().length === 1 ? `0${dateObject.month}` : dateObject.month;\n    const date = dateObject.date.toString().length === 1 ? `0${dateObject.date}` : dateObject.date;\n    const defaultDate = `${year}-${month}-${date}`;\n    const url = `https://api.covid19tracking.narrativa.com/api/${dateValue || defaultDate}`;\n    const tempResult = await fetch(url);\n    const finalResult = await tempResult.json();\n    const countriesDataArray = Object.values(finalResult.dates[dateValue || defaultDate].countries);\n    dispatch(fetchData(countriesDataArray));\n  }\n};\n\nexport default covid19Reducer;\n","import initialState from '../initialState';\n\n// Constants\nconst FETCH_FLAGS = 'covid19_info_finder/covid19/FETCH_FLAGS';\n\n// Action Creators\nexport const fetchFlags = (payload) => ({\n  type: FETCH_FLAGS,\n  payload,\n});\n\n// Reducers\nconst covid19FlagsReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case FETCH_FLAGS:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport const getCovidFlagsFromServer = () => async (dispatch) => {\n  const url = 'https://corona.lmao.ninja/v2/countries';\n  const tempResult = await fetch(url);\n  const finalResult = await tempResult.json();\n\n  const countryNameAndFlagURl = finalResult.sort().map((item) => ({\n    country: item.country,\n    flagURL: item.countryInfo.flag,\n  }));\n\n  dispatch(fetchFlags(countryNameAndFlagURl));\n};\n\nexport default covid19FlagsReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport covid19Reducer from './covid19/covid19';\nimport covid19FlagsReducer from './covid19/flags';\n\nconst rootReducer = combineReducers({\n  covid19Data: covid19Reducer,\n  nationalFlags: covid19FlagsReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/no_flag.2e6536d2.png\";","import React from 'react';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Flag from '../no_flag.png';\n\nconst CountryCard = ({ className, id }) => {\n  const state = useSelector((state) => state.covid19Data);\n  const item = state.filter((item) => item.id === id)[0];\n  const flags = useSelector((state) => state.nationalFlags);\n\n  const flagURL = Array.isArray(flags) ? flags.filter(\n    (country) => {\n      const left = item.name ? item.name.toLowerCase().split(' ').join('') : '';\n      const right = country.country.toLowerCase().split(' ').join('');\n      if (right.slice(0, 2) === 'us' && left === 'us') {\n        return true;\n      }\n      if ((left.slice(0, 7) === 'uniteda') && (right === 'uae')) {\n        return true;\n      }\n      if ((left.slice(0, 7) === 'unitedk') && (right === 'uk')) {\n        return true;\n      }\n      if ((left.slice(0, 7) === 'korea,s') && (right === 's.korea')) {\n        return true;\n      }\n      if ((left.slice(0, 7) === 'bosniaa') && (right === 'bosnia')) {\n        return true;\n      }\n      if ((left.substr(left.indexOf('burm'), 4) === 'burm') && (right === 'burm')) {\n        return true;\n      }\n      return ((left === right));\n    },\n  ) : [{ flagURL: 'https://img.etimg.com/thumb/msid-76340801,width-650,imgsize-389237,,resizemode-4,quality-100/coronavirus-vaccine-antibodies1_istock.jpg' }];\n\n  return (\n    <NavLink\n      to={{\n        pathname: `/country/${item.name.toLowerCase()}`,\n        data: item,\n        flag: flagURL[0] ? flagURL[0].flagURL : Flag,\n      }}\n      className={className}\n      exact\n    >\n      <div className={className}>\n        <img className=\"flag\" src={flagURL[0] ? flagURL[0].flagURL : Flag} alt=\"flag\" />\n        <span className=\"arrow\">\n          <FaArrowRight className=\"fa-arrow\" />\n        </span>\n        <div className=\"name-cases\">\n          <span className=\"name\">{item.name}</span>\n          <span className=\"cases\">\n            {(+item.today_confirmed).toLocaleString()}\n          </span>\n        </div>\n      </div>\n    </NavLink>\n  );\n};\n\nexport default CountryCard;\n","export default __webpack_public_path__ + \"static/media/globe.2ad406e0.gif\";","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport CountryCard from '../components/CountryCard';\nimport { getCovidInfoFromServer } from '../redux/covid19/covid19';\nimport Globe from '../globe.gif';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  let state = useSelector((state) => state.covid19Data);\n  state = Array.isArray(state) ? state : [];\n\n  const [internalState, setInternalState] = useState(state);\n  const [inputValue, setInputValue] = useState('');\n  const [dateValue, setDateValue] = useState('');\n\n  const worldWideTotal = state.reduce((init, current) => init + current.today_confirmed, 0);\n\n  let isEven = true;\n  let isOdd = false;\n\n  const onDateChange = (e) => {\n    const { value } = e.target;\n    // const dateArray = value.split('-');\n    // const [year, month, day] = dateArray;\n\n    // const minDate = '2020-02-01';\n    // const minDateArray = minDate.split('-');\n    // const [minYear, MinMonth] = minDateArray;\n\n    let passed = true;\n    // const now = new Date();\n    // const nowYeah = now.getFullYear();\n    // const nowMonth = now.getMonth() + 1;\n    // const nowDay = now.getDate();\n    // if (+year < +minYear) passed = false;\n    // if (+year === +minYear && +month < +MinMonth) passed = false;\n    // if (+year === +minYear && +month > 1) passed = true;\n    // if (value === minDate) passed = true;\n    // if (+year > nowYeah) passed = false;\n    // if (+year === nowYeah && +month > nowMonth) passed = false;\n    // if (+year === nowYeah && +month === nowMonth && +day > nowDay) passed = false;\n    const minDate = new Date('2020-02-01').getTime();\n    const passedDate = new Date(value).getTime();\n    const todaysDate = new Date().getTime();\n\n    if (passedDate < minDate || passedDate > todaysDate) {\n      passed = false;\n    }\n\n    if (passed) {\n      dispatch(getCovidInfoFromServer(value));\n    } else {\n      setDateValue(() => value);\n      return;\n    }\n    setDateValue(() => value);\n  };\n\n  const filterByCountryName = (value) => {\n    let filteredState = [...state].filter(\n      (item) => item.name.toLowerCase().includes(value.toLowerCase()),\n    );\n    filteredState = filteredState.length === 0 ? [false] : filteredState;\n    setInternalState(() => filteredState);\n  };\n\n  const onInputChange = (e) => {\n    setInputValue(() => {\n      filterByCountryName(e.target.value);\n      return e.target.value;\n    });\n  };\n\n  useEffect(() => {\n    setInternalState(() => state);\n  }, []);\n\n  return (\n    <div className=\"home-container\">\n      <h1 className=\"home-heading\">Worldwide Cases</h1>\n      <h1 className=\"home-heading h-heading\">{state[0] && new Date(state[0].date).toDateString()}</h1>\n\n      <div className=\"globe-icon-container\">\n        <img className=\"globe\" src={Globe} alt=\"Globe\" />\n      </div>\n\n      <div className=\"world-wide\">\n        <span className=\"cases name\">All Countries</span>\n        <span className=\"cases\">Total</span>\n        <span>\n          {worldWideTotal.toLocaleString()}\n        </span>\n      </div>\n\n      <div className=\"sticky-inputs\">\n        <div className=\"search-container\">\n          <span className=\"search-text\">\n            Get Data By Date:\n          </span>\n          <input\n            value={dateValue}\n            min=\"2020-02-01\"\n            max={new Date().toLocaleDateString().split('/').reverse()\n              .join('-')}\n            onChange={onDateChange}\n            className=\"search-field\"\n            placeholder=\"Search\"\n            type=\"date\"\n          />\n        </div>\n\n        <div className=\"search-container search-down\">\n          <span className=\"search-text\">\n            STATS BY COUNTRY\n          </span>\n          <input id=\"country-search\" className=\"search-field\" placeholder=\"Search\" onChange={onInputChange} value={inputValue} type=\"text\" />\n        </div>\n      </div>\n\n      {(internalState.length === 0 ? state : internalState).map((item, index) => {\n        if (item === false) return <div key={Math.random()} className=\"no-match\">No match found</div>;\n        if (index % 2 === 0 && isEven) {\n          isEven = !isEven;\n          const className = 'home-country-card gray1';\n          return (\n            <CountryCard\n              key={uuidv4()}\n              className={className}\n              date={item.date}\n              id={item.id}\n            />\n          );\n        }\n        if (index % 2 === 0 && !isEven) {\n          isEven = !isEven;\n          const className = 'home-country-card gray2';\n          return (\n            <CountryCard\n              key={uuidv4()}\n              className={className}\n              date={item.date}\n              id={item.id}\n            />\n          );\n        }\n        if (index % 2 === 1 && !isOdd) {\n          isOdd = !isOdd;\n          const className = 'home-country-card gray2';\n          return (\n            <CountryCard\n              key={uuidv4()}\n              className={className}\n              date={item.date}\n              id={item.id}\n            />\n          );\n        }\n        if (index % 2 === 1 && isOdd) {\n          isOdd = !isOdd;\n          const className = 'home-country-card gray1';\n          return (\n            <CountryCard\n              key={uuidv4()}\n              className={className}\n              date={item.date}\n              id={item.id}\n            />\n          );\n        }\n        return false;\n      })}\n      <div className=\"source\">\n        Source:\n        {' '}\n        {state[0] && state[0].source}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst TableRow = (props) => {\n  const { param, value } = props;\n  return (\n    <tr className=\"table-row\">\n      <td>{param}</td>\n      <td>{value.toLocaleString()}</td>\n    </tr>\n  );\n};\n\nexport default TableRow;\n","import React from 'react';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { useSelector } from 'react-redux';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport TableRow from '../components/TableRow';\n\nconst CountryPage = () => {\n  const location = useLocation();\n  let idMain;\n  let dateMain;\n  let flagMain;\n  if (location.data) {\n    idMain = location.data.id;\n    dateMain = location.data.date;\n    flagMain = location.flag;\n    localStorage.setItem('idState', JSON.stringify([idMain, dateMain, flagMain]));\n  } else {\n    const idState = JSON.parse(localStorage.getItem('idState'));\n    const [id, date, flag] = idState;\n    idMain = id;\n    dateMain = date;\n    flagMain = flag;\n  }\n\n  let state = useSelector((state) => state.covid19Data);\n  state = Array.isArray(state) ? state : [];\n  const data = state.filter((item) => item.id === idMain)[0];\n  const { regions } = data || { rogions: [] };\n  return (\n    <div className=\"country-container\">\n      <h1 className=\"country-header\">Country Cases</h1>\n      <h1 className=\"country-header h-heading\">\n        {new Date(dateMain).toDateString()}\n      </h1>\n      <div className=\"world-wide-country\">\n        <div className=\"globe-icon-container\">\n          <img className=\"country-image\" src={flagMain} alt=\"national flag\" />\n        </div>\n        <div className=\"world-wide\">\n          <span className=\"cases name\">{data && data.name}</span>\n          <span className=\"cases\">Total</span>\n          <span>{data && data.today_confirmed.toLocaleString()}</span>\n        </div>\n      </div>\n      <span className=\"break-down\">Country Data Breakdown</span>\n      <table className=\"country-table\">\n        {data && (\n          <tbody className=\"coutry-tbody\">\n            <TableRow param=\"Cases Today\" value={data.today_new_confirmed} />\n            <TableRow param=\"Total Deaths\" value={data.today_deaths} />\n            <TableRow param=\"Deaths Today\" value={data.today_new_deaths} />\n            <TableRow param=\"Open Cases\" value={data.today_open_cases} />\n            <TableRow param=\"Total Recovery\" value={data.today_recovered} />\n            <TableRow param=\"Recovery Today\" value={data.today_new_recovered} />\n          </tbody>\n        )}\n      </table>\n      <span className=\"break-down\">Data By Region</span>\n      <div className=\"regions-container\">\n        {regions ? regions.sort(\n          (a, b) => {\n            if (a.name > b.name) {\n              return 1;\n            }\n            if ((b.name > a.name)) {\n              return -1;\n            }\n            return 0;\n          },\n        ).map((item) => (\n          <NavLink\n            to={{\n              pathname: `/region/${data.name.toLowerCase().split(' ').join('')}/${item.name.toLowerCase().split(' ').join('')}`,\n              data: item,\n              country: data.name.toLowerCase().split(' ').join(''),\n              flag: flagMain,\n            }}\n            className=\"region-data-container-link\"\n            key={uuidv4()}\n            exact\n          >\n            <div className=\"region-data-container\">\n              <p className=\"region-name\">{item.name}</p>\n              <div className=\"inner-region-container\">\n                <p className=\"region-case\">{item.today_confirmed.toLocaleString()}</p>\n                <span className=\"arrow\">\n                  <FaArrowRight className=\"fa-arrow\" />\n                </span>\n              </div>\n            </div>\n          </NavLink>\n        )) : null}\n      </div>\n      {(regions && !regions[0]) && <div className=\"not-available\">{regions && !regions[0] && 'Regional Data Unavailable'}</div>}\n      <div className=\"source\">\n        Source:\n        {' '}\n        {data && data.source}\n      </div>\n    </div>\n  );\n};\n\nexport default CountryPage;\n","import React from 'react';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport TableRow from '../components/TableRow';\n\nconst RegionPage = () => {\n  let location = useLocation();\n  let data;\n  let country;\n  let flag;\n  if (!location.data) {\n    location = JSON.parse(localStorage.getItem('regionData'));\n    data = location.data;\n    country = location.country;\n    flag = location.flag;\n  } else {\n    data = location.data;\n    country = location.country;\n    flag = location.flag;\n    localStorage.setItem('regionData', JSON.stringify({ data, country, flag }));\n  }\n  const { sub_regions: subRegions } = data;\n  return (\n    <div className=\"region-container\">\n      <h1 className=\"country-header\">Regional Cases</h1>\n      <h1 className=\"country-header h-heading\">\n        {new Date(data.date).toDateString()}\n      </h1>\n      <div className=\"world-wide-country\">\n        <div className=\"globe-icon-container\">\n          <img className=\"country-image\" src={flag} alt=\"national flag\" />\n        </div>\n        <div className=\"world-wide\">\n          <span className=\"cases name\">{data && data.name}</span>\n          <span className=\"cases\">Total</span>\n          <span>{data && data.today_confirmed.toLocaleString()}</span>\n        </div>\n      </div>\n      <span className=\"break-down\">Regional Data Breakdown</span>\n      <table className=\"country-table\">\n        {data && (\n          <tbody className=\"coutry-tbody\">\n            <TableRow param=\"Cases Today\" value={data.today_new_confirmed ? data.today_new_confirmed : 'N/A'} />\n            <TableRow param=\"Total Deaths\" value={data.today_deaths ? data.today_deaths : 'N/A'} />\n            <TableRow param=\"Deaths Today\" value={data.today_new_deaths ? data.today_new_deaths : 'N/A'} />\n            <TableRow param=\"Open Cases\" value={data.today_open_cases ? data.today_open_cases : 'N/A'} />\n            <TableRow param=\"Total Recovery\" value={data.today_recovered ? data.today_recovered : 'N/A'} />\n            <TableRow param=\"Recovery Today\" value={data.today_new_recovered ? data.today_new_recovered : 'N/A'} />\n          </tbody>\n        )}\n      </table>\n      <span className=\"break-down\">Data By Sub-Region</span>\n      <div className=\"regions-container\">\n        {subRegions ? subRegions.sort(\n          (a, b) => {\n            if (a.name > b.name) {\n              return 1;\n            }\n            if ((b.name > a.name)) {\n              return -1;\n            }\n            return 0;\n          },\n        ).map((item) => (\n          <NavLink\n            to={{\n              pathname: `/subregion/${country}/${data.name.toLowerCase().split(' ').join('')}/${item.name.toLowerCase().split(' ').join('')}`,\n              data: item,\n              flag,\n            }}\n            className=\"region-data-container-link\"\n            key={uuidv4()}\n            exact\n          >\n            <div className=\"region-data-container\">\n              <p className=\"region-name\">{item.name}</p>\n              <div className=\"inner-region-container\">\n                <p className=\"region-case\">{item.today_confirmed.toLocaleString()}</p>\n                <span className=\"arrow\">\n                  <FaArrowRight className=\"fa-arrow\" />\n                </span>\n              </div>\n            </div>\n          </NavLink>\n        )) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default RegionPage;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport TableRow from '../components/TableRow';\n\nconst SubRegionPage = () => {\n  let location = useLocation();\n  let data;\n  let country;\n  let flag;\n  if (!location.data) {\n    location = JSON.parse(localStorage.getItem('subRegionData'));\n    data = location.data;\n    country = location.country;\n    flag = location.flag;\n  } else {\n    data = location.data;\n    country = location.country;\n    flag = location.flag;\n    localStorage.setItem('subRegionData', JSON.stringify({ data, country, flag }));\n  }\n  return (\n    <div className=\"sub-region-container\">\n      <h1 className=\"country-header\">Sub-Regional Cases</h1>\n      <h1 className=\"country-header h-heading\">\n        {new Date(data.date).toDateString()}\n      </h1>\n      <div className=\"world-wide-country\">\n        <div className=\"globe-icon-container\">\n          <img className=\"country-image\" src={flag} alt=\"national flag\" />\n        </div>\n        <div className=\"world-wide\">\n          <span className=\"cases name\">{data && data.name}</span>\n          <span className=\"cases\">Total</span>\n          <span>{data && data.today_confirmed.toLocaleString()}</span>\n        </div>\n      </div>\n      <span className=\"break-down\">Sub-Regional Data Breakdown</span>\n      <table className=\"country-table\">\n        {data && (\n          <tbody className=\"coutry-tbody\">\n            <TableRow param=\"Cases Today\" value={data.today_new_confirmed ? data.today_new_confirmed : 'N/A'} />\n            <TableRow param=\"Total Deaths\" value={data.today_deaths ? data.today_deaths : 'N/A'} />\n            <TableRow param=\"Deaths Today\" value={data.today_new_deaths ? data.today_new_deaths : 'N/A'} />\n            <TableRow param=\"Open Cases\" value={data.today_open_cases ? data.today_open_cases : 'N/A'} />\n            <TableRow param=\"Total Recovery\" value={data.today_recovered ? data.today_recovered : 'N/A'} />\n            <TableRow param=\"Recovery Today\" value={data.today_new_recovered ? data.today_new_recovered : 'N/A'} />\n          </tbody>\n        )}\n      </table>\n    </div>\n  );\n};\n\nexport default SubRegionPage;\n","import React from 'react';\n\nconst PageNotFound = () => <div>Page not found!</div>;\n\nexport default PageNotFound;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <p className=\"footer-text\">\n      Created with 💖 by Henry Kc at Microverse Inc., US.\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { BsFillMicFill, BsFillGearFill } from 'react-icons/bs';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\n\nconst Navbar = () => {\n  const state = useSelector((state) => state.covid19Data);\n  const history = useHistory();\n  return (\n    <div className=\"navbar\">\n      <div className=\"left\">\n        <span className=\"back\"><FaArrowLeft onClick={() => history.goBack()} /></span>\n        <span className=\"year\">{state[0] && state[0].date.split('-')[0]}</span>\n      </div>\n      <span className=\"middle\">Coronavirus App</span>\n      <div className=\"right\">\n        <span className=\"mic\">\n          <BsFillMicFill />\n        </span>\n        <span className=\"settings\">\n          <BsFillGearFill />\n        </span>\n        <span className=\"back\"><FaArrowRight onClick={() => history.goForward()} /></span>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import Navbar from './Navbar';\n\nconst Header = () => (\n  <header className=\"header\">\n    <Navbar />\n  </header>\n);\n\nexport default Header;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { getCovidInfoFromServer } from '../redux/covid19/covid19';\n\nimport HomePage from '../pages/HomePage';\nimport CountryPage from '../pages/CountryPage';\nimport RegionPage from '../pages/RegionPage';\nimport SubRegionPage from '../pages/SubRegionPage';\nimport PageNotFound from '../pages/PageNotFound';\nimport Footer from './Footer';\nimport Header from './Header';\nimport { getCovidFlagsFromServer } from '../redux/covid19/flags';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCovidInfoFromServer());\n    dispatch(getCovidFlagsFromServer());\n  }, []);\n\n  return (\n    <div className=\"main\">\n      <section>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/country/:name\">\n            <CountryPage />\n          </Route>\n          <Route path=\"/region/:country/:region\">\n            <RegionPage />\n          </Route>\n          <Route path=\"/subregion/:nation/:region/:subregion\">\n            <SubRegionPage />\n          </Route>\n          <Route path=\"*\">\n            <PageNotFound />\n          </Route>\n        </Switch>\n      </section>\n      <section>\n        <Footer />\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './redux/configureStore';\n\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}